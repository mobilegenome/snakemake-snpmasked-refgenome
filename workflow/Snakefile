import glob
import os
from snakemake.remote.FTP import RemoteProvider as FTPRemoteProvider
from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
from pathlib import Path


# get config variables
STRAINS = config["strains"]
MODE = config["mode"]
OUTPUT_DIR=config["output_directory"]
OUTPUT_DIR_MCAROLI=config["output_directory_mcaroli"]
MGP_VCF_FILE = config["mgp_vcf_file"]

# conditions
PER_STRAIN_FASTA = config["per_strain_fasta"]
MAKE_CELLRANGER_REFERENCE = config["make_cellranger_reference"]
CELLRANGER_FILTER_GTF = config["cellranger_filter_gtf"]

if MODE == "incorporate_snvs":
    # set PER_STRAIN_FASTA to True if MODE is set to inject SNVs
    PER_STRAIN_FASTA = True

print(PER_STRAIN_FASTA)
print(CELLRANGER_FILTER_GTF)
print(MAKE_CELLRANGER_REFERENCE)
print(MODE)

print(STRAINS)

# define targets
def get_target_files(output_dir):
    target_files = {}

    if MODE == "make_mcarolifiles":
      target_files["makefile"] = [OUTPUT_DIR_MCAROLI + "/Makefile",
                                  OUTPUT_DIR_MCAROLI + "/Caroli.snp",
                                  OUTPUT_DIR_MCAROLI + "/Caroli.snp.bed",
                                  OUTPUT_DIR_MCAROLI + "/Caroli.snp.mm10.bed",
                                  OUTPUT_DIR_MCAROLI + "/Caroli.snp.mm10.no_indels.bed",
                                  OUTPUT_DIR_MCAROLI + "/Caroli.snp.mm10.unmapped.bed",
                                  #OUTPUT_DIR_MCAROLI + "/Caroli.snp.fa",
                                  #OUTPUT_DIR_MCAROLI + "/Caroli.snp.no_indels.fa",
                                  OUTPUT_DIR_MCAROLI + "/Caroli.snp.tar.gz",
                                  OUTPUT_DIR_MCAROLI + "/mm9ToMm10.over.chain.gz",
                                  OUTPUT_DIR_MCAROLI + "/Caroli.snp.mm10.no_indels.no_chr.bed",
                                  OUTPUT_DIR_MCAROLI + "/Caroli.snp.mm10.no_indels.no_chr.bed.sorted.gz"]
 
    
    if MODE != "make_mcarolifiles":
      target_files["snp_split_targets"] = [
          "{outdir}/SNPsplit/{strain}/all_SNPs_{strain}_GRCm38.txt.gz".format(
              outdir=output_dir,
              strain=strain)
          for strain in STRAINS
      ]


    if MODE == "maskfasta":
        target_files["merged_strain_targets"] = [
            f"{output_dir}/merged/all_SNPs_all_strains_GRCm38.bed.gz",
            #f"{output_dir}/merged/all_SNPs_all_strains_GRCm38.intersect.bed.gz", # not required??
            f"{output_dir}/merged/GRCm38_masked_allStrains"
        ]

        target_files["snp_split_targets"] = [
            "{outdir}/SNPsplit/{strain}/all_SNPs_{strain}_GRCm38.bed.gz".format(
            outdir=output_dir,
            strain=strain)
        for strain in STRAINS
        ]

    
    if PER_STRAIN_FASTA:
        if MODE == "incorporate_snvs":
            STRAINS_all = STRAINS + ["Mus_caroli"]
            print(STRAINS_all)
        else:
            STRAINS_all = STRAINS # there is no rule to generate corresponding Mus caroli output in mode "maskfasta"
        target_files["single_strain_targets"] = \
                ["{outdir}/{strain}/GRCm38_{mode_label}_{strain}.fa".format(
                    outdir=output_dir,
                    mode_label="masked" if MODE == "maskfasta" else "full_sequence",
                    strain=strain)
                    for strain in STRAINS_all]

    return target_files.values()

all_files = get_target_files(output_dir=OUTPUT_DIR)

print(all_files)


localrules:
    all,
    snp_split_concat,
    strip_chr_prefix_from_fasta,
    add_chr_prefix_to_fasta,
    strip_chr_prefix_from_gtf,
    #create_genome_file,
    copy_makefile


rule all:
    input:
        all_files

# this file is in folder "data/snp_masked_genome/input_files/mouse_dbsnp_keange2015"
# rule retrieve_snp_vcf:
#    #    input: HTTP.remote("ftp.sanger.ac.uk/pub/REL-1505-SNPs_Indels/mgp.v5.merged.snps_all.dbSNP142.vcf.gz", keep_local=True)
#    output: "data/mgp.v5.merged.snps_all.dbSNP142.vcf.gz"
#    run:
# 	print("File is there {output}")


if MODE == "make_mcarolifiles":
  include: "rules/make_mcarolifiles.smk"
  
if MODE != "make_mcarolifiles":          
  include: "rules/prepare.smk"
  include: "rules/maskfasta.smk"

if MAKE_CELLRANGER_REFERENCE:
  include: "rules/cellranger_mkref.smk"

